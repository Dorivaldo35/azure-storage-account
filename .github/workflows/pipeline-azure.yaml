name: Azure pipeline

on:
  push:
    branches:
    - main

jobs:

  tf-run:
    name: Terraform on Azure
    runs-on: ubuntu-latest
    permissions:
      contents: read
 
    steps:

    - name: Step 01 - Terraform Setup
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.13.3

    - name: Step 03 - CheckOut GitHub Repo
      uses: actions/checkout@v4

    - name: Step 04 - Authenticate with Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Step 04.1 - Verify Azure Authentication
      run: |
        echo "Verifying Azure authentication..."
        echo "Current account info:"
        az account show
        echo "Available subscriptions:"
        az account list --output table

    - name: Step 04.2 - Setup Storage Account Permissions
      run: |
        echo "Setting up Storage Account permissions for Terraform backend..."
        
        # Obter o Object ID do Service Principal atual
        SP_OBJECT_ID=$(az ad sp show --id $(az account show --query user.name -o tsv) --query id -o tsv)
        echo "Service Principal Object ID: $SP_OBJECT_ID"
        
        # Adicionar permissões no Storage Account
        echo "Adding Storage Blob Data Contributor role..."
        az role assignment create \
          --assignee-object-id $SP_OBJECT_ID \
          --assignee-principal-type ServicePrincipal \
          --role "Storage Blob Data Contributor" \
          --scope "/subscriptions/$(az account show --query id -o tsv)/resourceGroups/rg-kbstaticsitetf/providers/Microsoft.Storage/storageAccounts/kbstaticsitetf" \
          --only-show-errors || echo "Role assignment may already exist"
        
        # Verificar se o container existe, se não, criar
        echo "Checking if tfstate container exists..."
        az storage container show \
          --name "tfstate" \
          --account-name "kbstaticsitetf" \
          --auth-mode login \
          --only-show-errors || \
        az storage container create \
          --name "tfstate" \
          --account-name "kbstaticsitetf" \
          --auth-mode login \
          --only-show-errors

    - name: Step 04.3 - Verify Storage Access
      run: |
        echo "Verifying Storage Account access..."
        az storage blob list \
          --container-name "tfstate" \
          --account-name "kbstaticsitetf" \
          --auth-mode login \
          --output table

    - name: Step 05 - Terraform Init
      run : terraform -chdir=./terraform init -input=false
      env:
        ARM_SUBSCRIPTION_ID: "5a58073a-33d2-4213-bddc-000bc2420739"

    - name: Step 05.1 - Fix State Issues (if needed)
      run: |
        echo "Checking for state issues..."
        # Se ainda houver problemas de provider, força reconfigure
        terraform -chdir=./terraform init -reconfigure -input=false || echo "Reconfigure not needed"
      env:
        ARM_SUBSCRIPTION_ID: "5a58073a-33d2-4213-bddc-000bc2420739"

    - name: Step 06 - Terraform Validate
      run : terraform -chdir=./terraform validate
      env:
        ARM_SUBSCRIPTION_ID: "5a58073a-33d2-4213-bddc-000bc2420739"

    - name: Step 07 - Terraform Plan
      run : terraform -chdir=./terraform plan -input=false -out tfplan
      env:
        ARM_SUBSCRIPTION_ID: "5a58073a-33d2-4213-bddc-000bc2420739"

    - name: Step 08 - Terraform Apply
      run : terraform -chdir=./terraform apply -auto-approve -input=false tfplan
      env:
        ARM_SUBSCRIPTION_ID: "5a58073a-33d2-4213-bddc-000bc2420739"

    - name: Step 09 - Terraform Show
      run : terraform -chdir=./terraform show
      env:
        ARM_SUBSCRIPTION_ID: "5a58073a-33d2-4213-bddc-000bc2420739"